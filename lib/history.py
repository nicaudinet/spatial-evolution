import numpy as np
from lib.player import Player
from lib.constants import *

class History:
    def __init__(self):
        self.p1 = ''
        self.p2 = ''
        self.score1 = 0
        self.score2 = 0

        self.scores = np.array([
            [[R,R],  [S,T],  [L,L],],
            [[T,S],  [P,P],  [L,L],],
            [[L,L],  [L,L],  [L,L],],
        ])

        self.action_idx_map = {
            'c': 0,
            'd': 1,
            'a': 2,
        }
    
    def put(self, action1, action2):
        """ Store the results of a round (the two actions generated by the two
        players) into the history. """

        self.p1 += action1 + action2
        self.p2 += action2 + action1

        # make sure that only one action is passed on, only happens when initial state is put
        self.update_score(action1[-1], action2[-1])

    def update_score(self, a1, a2):
        """ Evaluate the history of the two players for Prisoner's Dilemma,
        where:
                  a2
                C    D    A
        a1  C  R,R  S,T  L,L
            D  T,S  P,P  L,L
            A  L,L  L,L  L,L
            """

        a1_idx = self.action_idx_map[a1]
        a2_idx = self.action_idx_map[a2]

        self.score1 += self.scores[a1_idx, a2_idx, P1]
        self.score2 += self.scores[a1_idx, a2_idx, P2]

    def print(self):
        """ Pretty print the history """
        print("P1 | P2")
        print("-------")
        actions = list(self.p1)
        for i in range(0, len(actions), 2):
            a1 = actions[i]
            a2 = actions[i+1]
            print(" %s | %s " % (a1,a2))

